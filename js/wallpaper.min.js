//HEADER====================================================================================
// Раскрываем - закрываем бургер============
document.addEventListener('click', function (e) {
	let burger = document.querySelector('.icon-menu');
	let menu = document.querySelector('.menu');
	let plashMask = document.querySelector('.backgroundMask');
	let body = document.querySelector('body');
	// закрываем на фон
	if (e.target.classList.contains('backgroundMask')) {
		burger.classList.remove('_active');
		menu.classList.remove('_active');
		body.classList.remove('_lock');
		plashMask.style = 'display: none;';
	}
	// закрываем на крестик
	if (e.target.closest('.icon-menu-active')) {
		burger.classList.remove('_active');
		menu.classList.remove('_active');
		body.classList.remove('_lock');
		plashMask.style = 'display: none;'
	}

	// открываем бургер
	if (e.target.closest('.icon-menu')) {
		burger.classList.toggle('_active');
		menu.classList.toggle('_active');
		body.classList.add('_lock');
		plashMask.style = 'display: block;'
	}
});

// ==================================

// Функции START ========================================================
let deleteActiveTabAndBody = () => {
	let tabPage = document.querySelectorAll('.tab-page');
	let tabMore = document.querySelectorAll('.tab-more');
	let bodyPage = document.querySelectorAll('.calc-count');
	let inpBlockPage = document.querySelectorAll('.inp-block_change');
	tabPage.forEach((elem) => {
		if (elem.classList.contains('_active')) {
			elem.classList.remove('_active')
		}
	});
	tabMore.forEach((elem) => {
		if (elem.classList.contains('_active')) {
			elem.classList.remove('_active')
		}
	});
	bodyPage.forEach((elem) => {
		if (elem.classList.contains('_active')) {
			elem.classList.remove('_active')
		}
	});
	inpBlockPage.forEach((elem) => {
		if (elem.classList.contains('_active')) {
			elem.classList.remove('_active')
		}
	});
}

radioDel = (e) => {
	let radioBody = e.target.parentNode.parentNode.parentNode;
	let allRadio = radioBody.querySelectorAll('.radio__text');
	let allRadioInp = radioBody.querySelectorAll('.radio__inp');
	allRadio.forEach((elem) => {
		if (elem.classList.contains('_active')) {
			elem.classList.remove('_active')
		}
	});
	allRadioInp.forEach((elem) => {
		elem.checked = '';
	});
}

radioDelAll = () => {
	let allRadioAll = document.querySelectorAll('.radio__text');
	allRadioAll.forEach((elem) => {
		if (elem.classList.contains('_active')) {
			elem.classList.remove('_active')
		}
	});
}
let addRoom = () => {
	deleteActiveTabAndBody()
	let roomTab = document.querySelector('#room-tab');
	let roomBody = document.querySelector('#room-body');
	let roomBlock = document.querySelector('#room-block');
	roomTab.classList.add('_active');
	roomBody.classList.add('_active');
	roomBlock.classList.add('_active');
}
let addWall = () => {
	deleteActiveTabAndBody()
	let wallTab = document.querySelector('#wall-tab');
	let wallBody = document.querySelector('#room-body');
	let wallBlock = document.querySelector('#wall-block');
	wallTab.classList.add('_active');
	wallBlock.classList.add('_active');
	wallBody.classList.add('_active');
}

let addDetails = () => {
	deleteActiveTabAndBody()
	let detailsTab = document.querySelector('#details-tab');
	let detailsBody = document.querySelector('#details-body');
	detailsTab.classList.add('_active');
	detailsBody.classList.add('_active');
}
let addInstruction = () => {
	deleteActiveTabAndBody()
	let instructionTab = document.querySelector('#instruction-tab');
	let instructionBody = document.querySelector('#instruction-body');
	instructionTab.classList.add('_active');
	instructionBody.classList.add('_active');
}

let addOrDelSectionBlock = (e, addOrDel) => {
	let sectionBody = e.target.parentNode.parentNode.parentNode;
	let sectionContainer = sectionBody.querySelector('.inp-block__items');
	let sectionItem = sectionBody.querySelectorAll('.inp-item');
	let sectionItemLength = sectionItem.length + 1;
	if (addOrDel) {
		if (sectionBody.id === 'room-block') {
			sectionContainer.insertAdjacentHTML(
				'beforeend',
				`<div class="inp-block__item inp-item">
			<div class="inp-item__header">
				<div class="inp-item__title">Комната <span class="inp-item__title-num">${sectionItemLength}</span></div>
				<div class="_icon-del inp-item__rotate-del"></div>
			</div>
			<div class="inp-item__body">
				<div class="inp-item__inp-row">
					<div class="inp-item__name">Ширина</div>
					<input class="inp-item__input" id="room_${sectionItemLength}-width" autocomplete="off"
						type="number" name="room" data-error="Ошибка" data-value=""
						placeholder="5.18">
					<div class="inp-item__unit">м</div>
				</div>
				<div class="inp-item__inp-row">
					<div class="inp-item__name">Длина</div>
					<input class="inp-item__input" id="room_${sectionItemLength}-length" autocomplete="off"
						type="number" name="room" data-error="Ошибка" data-value=""
						placeholder="5.18">
					<div class="inp-item__unit">м</div>
				</div>
				<div class="inp-item__inp-row">
					<div class="inp-item__name">Высота</div>
					<input class="inp-item__input" id="room_${sectionItemLength}-height" autocomplete="off"
						type="number" name="room" data-error="Ошибка" data-value=""
						placeholder="5.18">
					<div class="inp-item__unit">м</div>
				</div>
			</div>
		</div>`);
		}
		if (sectionBody.id === 'wall-block') {
			sectionContainer.insertAdjacentHTML(
				'beforeend',
				`<div class="inp-block__item inp-item">
				<div class="inp-item__header">
					<div class="inp-item__title">Стена <span class="inp-item__title-num">${sectionItemLength}</span></div>
					<div class="_icon-del inp-item__rotate-del"></div>
				</div>
				<div class="inp-item__body">
					<div class="inp-item__inp-row">
						<div class="inp-item__name">Ширина</div>
						<input class="inp-item__input" id="wall_${sectionItemLength}-width" autocomplete="off"
							type="number" name="wall" data-error="Ошибка" data-value=""
							placeholder="5.18">
						<div class="inp-item__unit">м</div>
					</div>
					<div class="inp-item__inp-row">
						<div class="inp-item__name">Высота</div>
						<input class="inp-item__input" id="wall_${sectionItemLength}-height" autocomplete="off"
							type="number" name="wall" data-error="Ошибка" data-value=""
							placeholder="5.18">
						<div class="inp-item__unit">м</div>
					</div>
				</div>
			</div>`);
		}
		if (sectionBody.id === 'window-block') {
			sectionContainer.insertAdjacentHTML(
				'beforeend',
				`<div class="inp-block__item inp-item">
				<div class="inp-item__header">
					<div class="inp-item__title">Окно <span class="inp-item__title-num">${sectionItemLength}</span>
					</div>
					<div class="_icon-del inp-item__rotate-del"></div>
				</div>
				<div class="inp-item__body">
					<div class="inp-item__inp-row">
						<div class="inp-item__name">Ширина</div>
						<input class="inp-item__input" id="window_${sectionItemLength}-width" autocomplete="off"
							type="number" name="window" data-error="Ошибка" data-value=""
							placeholder="5.18">
						<div class="inp-item__unit">м</div>
					</div>
					<div class="inp-item__inp-row">
						<div class="inp-item__name">Длина</div>
						<input class="inp-item__input" id="window_${sectionItemLength}-length" autocomplete="off"
							type="number" name="window" data-error="Ошибка" data-value=""
							placeholder="5.18">
						<div class="inp-item__unit">м</div>
					</div>
					<div class="inp-item__inp-row inp-item__inp-row_num">
						<div class="inp-item__name inp-item__name_num">Колличество</div>
						<input class="inp-item__input inp-item__input_num" id="window_${sectionItemLength}-num"
							autocomplete="off" type="number" name="window" data-error="Ошибка"
							data-value="" placeholder="1">
						<div class="inp-item__unit inp-item__unit_num">шт.</div>
					</div>
				</div>
			</div>`);
		}
		if (sectionBody.id === 'door-block') {
			sectionContainer.insertAdjacentHTML(
				'beforeend',
				`<div class="inp-block__item inp-item">
				<div class="inp-item__header">
					<div class="inp-item__title">Дверь <span class="inp-item__title-num">${sectionItemLength}</span>
					</div>
					<div class="_icon-del inp-item__rotate-del"></div>
				</div>
				<div class="inp-item__body">
					<div class="inp-item__inp-row">
						<div class="inp-item__name">Ширина</div>
						<input class="inp-item__input" id="door_${sectionItemLength}-width" autocomplete="off"
							type="number" name="door" data-error="Ошибка" data-value=""
							placeholder="5.18">
						<div class="inp-item__unit">м</div>
					</div>
					<div class="inp-item__inp-row">
						<div class="inp-item__name">Длина</div>
						<input class="inp-item__input" id="door_${sectionItemLength}-length" autocomplete="off"
							type="number" name="door" data-error="Ошибка" data-value=""
							placeholder="5.18">
						<div class="inp-item__unit">м</div>
					</div>
					<div class="inp-item__inp-row inp-item__inp-row_num">
						<div class="inp-item__name inp-item__name_num">Колличество</div>
						<input class="inp-item__input inp-item__input_num" id="door_${sectionItemLength}-num"
							autocomplete="off" type="number" name="door" data-error="Ошибка"
							data-value="" placeholder="1">
						<div class="inp-item__unit inp-item__unit_num">шт.</div>
					</div>
				</div>
			</div>`);
		}
		let btnItem = sectionBody.querySelector('.inp-block__btn');
		btnItem.classList.remove('_no-item');
	}
	if (e.target.parentNode.parentNode.parentNode.parentNode.parentNode.id === 'room-block' || e.target.parentNode.parentNode.parentNode.parentNode.parentNode.id === 'wall-block') {
		if (!addOrDel && sectionItemLength > 2) {
			e.target.parentNode.parentNode.remove();
			let sectionBlockTitle = sectionBody.querySelectorAll('.inp-item__title-num');
			sectionBlockTitle.forEach((elem, index) => {
				elem.innerHTML = index + 1;
			});
		}
	} else {
		if (!addOrDel) {
			e.target.parentNode.parentNode.remove();
			let sectionBlockTitle = sectionBody.querySelectorAll('.inp-item__title-num');
			sectionBlockTitle.forEach((elem, index) => {
				elem.innerHTML = index + 1;
			});
		}
		let sectionItem = sectionBody.querySelectorAll('.inp-item');
		let sectionItemLength = sectionItem.length;
		if (sectionItemLength === 0) {
			let btnItem = sectionBody.parentNode.parentNode.querySelector('.inp-block__btn');
			btnItem.classList.add('_no-item');
		}
	}

}


let InpCorrect = () => {
	// окна
	let windowBlock = document.querySelector('#window-block');
	let InpWindow = windowBlock.querySelectorAll('input');
	for (let i = 0; i < InpWindow.length; i++) {
		if (InpWindow[i].value !== '') {
			arrTrue.push(true)
		} else {
			arrTrue.push(false)
			InpWindow[i].style.border = '1px solid red';
		}
	}
	// двери
	let doorBlock = document.querySelector('#door-block');
	let InpDoor = doorBlock.querySelectorAll('input');
	for (let i = 0; i < InpDoor.length; i++) {
		if (InpDoor[i].value !== '') {
			arrTrue.push(true)
		} else {
			arrTrue.push(false)
			InpDoor[i].style.border = '1px solid red';
		}
	}
	// рапорт 
	let raportBlock = document.querySelector('#raport');
	let InpRaport = raportBlock.querySelectorAll('input');
	for (let i = 0; i < InpRaport.length; i++) {
		if (InpRaport[i].value !== '') {
			arrTrue.push(true)
		} else {
			arrTrue.push(false)
			InpRaport[i].style.border = '1px solid red';
		}
	}
}


// Результат при submit выводить блок или нет
let resArr = '';
let roomBlock = document.querySelector('#room-block');
let wallBlock = document.querySelector('#wall-block');
let submitRes = () => {
	arrTrue = [];
	// по комнатам
	if (roomBlock.classList.contains('_active')) {
		// комнаты
		let InpRoom = roomBlock.querySelectorAll('input');
		for (let i = 0; i < InpRoom.length; i++) {
			if (InpRoom[i].value !== '') {
				arrTrue.push(true)
			} else {
				arrTrue.push(false)
				InpRoom[i].style.border = '1px solid red';
			}
		}
		InpCorrect();
	}
	if (wallBlock.classList.contains('_active')) {
		// стены
		let InpWall = wallBlock.querySelectorAll('input');
		for (let i = 0; i < InpWall.length; i++) {
			if (InpWall[i].value !== '') {
				arrTrue.push(true)
			} else {
				arrTrue.push(false)
				InpWall[i].style.border = '1px solid red';
			}
		}
		InpCorrect();
	}
	resArr = true;
	arrTrue.map((elem) => {
		if (!elem) {
			resArr = false;
		}
	})
}
// Функции END ========================================================


// LocalStorage START ========================================================

if (localStorage.getItem('pageHeaderSave') === 'room') {
	addRoom();
}
if (localStorage.getItem('pageHeaderSave') === 'wall') {
	addWall();
}
if (localStorage.getItem('pageHeaderSave') === 'details') {
	addDetails();
}
if (localStorage.getItem('pageHeaderSave') === 'instruction') {
	addInstruction();
}
// LocalStorage END ========================================================


// События клик START ========================================================
document.addEventListener('click', (e) => {
	// подчеркивание кнопки, открытие секции нужной вкладки
	if (e.target.closest('#room-tab')) {
		addRoom();
		submitRes();
		localStorage.setItem('pageHeaderSave', 'room')
	}
	if (e.target.closest('#wall-tab')) {
		addWall();
		submitRes();
		localStorage.setItem('pageHeaderSave', 'wall')
	}
	if (e.target.closest('#details-tab')) {
		addDetails();
		localStorage.setItem('pageHeaderSave', 'details')
	}
	if (e.target.closest('#instruction-tab')) {
		addInstruction();
		localStorage.setItem('pageHeaderSave', 'instruction')
	}
	//адаптация инструкции и детали 
	if (e.target.closest('#icon-info-mobile')) {
		let infoMobile = document.querySelector('#info-body-mobile');
		infoMobile.classList.toggle('_active');
	}
	if (!e.target.closest('#icon-info-mobile') && !e.target.closest('#info-body-mobile') && document.querySelector('#info-body-mobile').classList.contains('_active')) {
		let infoMobile = document.querySelector('#info-body-mobile');
		infoMobile.classList.remove('_active');
	}
	//radio-btn
	if (e.target.closest('.radio__inp')) {
		radioDel(e);
		e.target.checked = 'checked';
		let radioLabel = e.target.nextElementSibling;
		radioLabel.classList.add('_active');
		let inpCustom = e.target.parentNode.parentNode.parentNode.querySelector('.inp-item__input_сustom');
		let inpCustomStock = e.target.parentNode.parentNode.parentNode.parentNode.parentNode.querySelector('#custom_stock');

		if (inpCustom) {
			inpCustom.value = "";
		}
		if (inpCustomStock) {
			inpCustomStock.value = "";
		}
	}
	//add BlocksItems комнаты окна  двери стены

	if (e.target.closest('.inp-block__btn')) {
		addOrDelSectionBlock(e, true);
	}
	// del BlocksItems комнаты окна  двери стены
	if (e.target.closest('.inp-item__rotate-del')) {
		addOrDelSectionBlock(e, false);
	}
	// сброс формы 
	if (e.target.closest('.result__btn-reset')) {
		let wallpaperForm = document.forms.wallpapercalc;
		wallpaperForm.reset();
		e.preventDefault();
		radioDelAll();
		let inpRadioDefW = document.querySelector('#rulon_05-width');
		let inpRadioDefL = document.querySelector('#rulon_10-length');
		let InpDefFive = document.querySelector('#stock_5');
		InpDefFive.checked = 'checked';
		inpRadioDefW.checked = 'checked';
		inpRadioDefL.checked = 'checked';
		inpRadioDefW.nextElementSibling.classList.add('_active');
		inpRadioDefL.nextElementSibling.classList.add('_active');
		InpDefFive.nextElementSibling.classList.add('_active');
	}
});

// События клик END ========================================================

// События FOCUSOUT START ========================================================
document.addEventListener('focusout', (e) => {
	if (e.target.closest('#custom_rulon-width')) {
		let inpCustomRulonWidth = document.querySelector('#custom_rulon-width');
		if (inpCustomRulonWidth.value !== '0' && inpCustomRulonWidth.value !== '') {
			radioDel(e);
		}
		if (inpCustomRulonWidth.value === '' || inpCustomRulonWidth.value === '0') {
			let inpRadioDefW = document.querySelector('#rulon_05-width');
			radioDel(e);
			inpCustomRulonWidth.value = '';
			inpRadioDefW.checked = 'checked';
			inpRadioDefW.nextElementSibling.classList.add('_active');
		}
	}
	if (e.target.closest('#custom_rulon-length')) {
		let inpCustomRulonLength = document.querySelector('#custom_rulon-length');
		if (inpCustomRulonLength.value !== '0' && inpCustomRulonLength.value !== '') {
			radioDel(e);
		}
		if (inpCustomRulonLength.value === '' || inpCustomRulonLength.value === '0') {
			let inpRadioDefL = document.querySelector('#rulon_10-length');
			radioDel(e);
			inpCustomRulonLength.value = '';
			inpRadioDefL.checked = 'checked';
			inpRadioDefL.nextElementSibling.classList.add('_active');
		}
	}
	if (e.target.closest('#custom_stock')) {
		let inpCustomRulonCustom = document.querySelector('#custom_stock');
		if (inpCustomRulonCustom.value !== '0' && inpCustomRulonCustom.value !== '') {
			let radioBody = e.target.parentNode.parentNode.parentNode.parentNode;
			let allRadio = radioBody.querySelectorAll('.radio__text');
			allRadio.forEach((elem) => {
				if (elem.classList.contains('_active')) {
					elem.classList.remove('_active');
				}
				elem.previousElementSibling.checked = '';
			});
		}
		if (inpCustomRulonCustom.value === '0' || inpCustomRulonCustom.value === '') {
			let radioBody = e.target.parentNode.parentNode.parentNode.parentNode;
			let allRadio = radioBody.querySelectorAll('.radio__text');
			allRadio.forEach((elem) => {
				if (elem.classList.contains('_active')) {
					elem.classList.remove('_active');
				}
				elem.previousElementSibling.checked = '';
			});
			let InpDefFive = document.querySelector('#stock_5');
			InpDefFive.checked = 'checked';
			inpCustomRulonCustom.value = '';
			InpDefFive.nextElementSibling.classList.add('_active');
		}
	}
	// проверки всех полей=========
	if (e.target.closest('.inp-item__input')) {
		let inpValue = e.target.value;
		// оставляем только цифры
		e.target.value = inpValue.replace(/[^0-9.,]/g, '');
		if (e.target.value !== '') {
			e.target.style.border = '1px solid #cdcdcd';
		}
	}

});


// Работа с формой============================================


let wallpaperForm = document.forms.wallpapercalc;
let arrTrue = [];
var formValuesArray = [];

wallpaperForm.addEventListener('submit', (e) => {
	e.preventDefault();
	submitRes();
	// вывод результата
	let resultContainer = document.querySelector('.result__body');
	if (roomBlock.classList.contains('_active')) {
		if (resArr !== false) {
			resultContainer.innerHTML = '';
			resultContainer.insertAdjacentHTML(
				'beforeend',
				`<div class="body-result__title">Результат расчета по Комнатам:</div>
				<div class="body-result__block">
					<div class="body-result__num-rulon">12 трубок</div>
					<div class="body-result__num-other">1.06 м х 10 м</div>
				</div>
				<div class="body-result__subinfo">
					<div class="body-result__square-wall">Количество обоев: 63.6 кв.м</div>
					<div class="body-result__square">Площадь оклейки: 53 кв.м</div>
				</div>`
			);
		} else {
			resultContainer.innerHTML = '';
			resultContainer.insertAdjacentHTML(
				'beforeend',
				`<div class="body-result__title">Пожалуйста, введите данные корректно!</div>`
			);
		}
	}
	if (wallBlock.classList.contains('_active')) {
		if (resArr !== false) {
			resultContainer.innerHTML = '';
			resultContainer.insertAdjacentHTML(
				'beforeend',
				`<div class="body-result__title">Результат расчета по Стенам:</div>
				<div class="body-result__block">
					<div class="body-result__num-rulon">12 трубок</div>
					<div class="body-result__num-other">1.06 м х 10 м</div>
				</div>
				<div class="body-result__subinfo">
					<div class="body-result__square-wall">Количество обоев: 63.6 кв.м</div>
					<div class="body-result__square">Площадь оклейки: 53 кв.м</div>
				</div>`
			);
		} else {
			resultContainer.innerHTML = '';
			resultContainer.insertAdjacentHTML(
				'beforeend',
				`<div class="body-result__title">Пожалуйста, введите данные корректно!</div>`
			);
		}
	}





	// let allInput = wallpaperForm.elements;
	// var formValuesArray = [];
	// for (var i = 0; i < allInput.length; i++) {
	// 	if (allInput[i].type === 'number') {
	// 		formValuesArray.push([allInput[i].id, allInput[i].value]);
	// 	}
	// 	if (allInput[i].type === 'radio' && allInput[i].checked) {
	// 		formValuesArray.push([allInput[i].id, allInput[i].value]);
	// 	}
	// }
	// console.log(formValuesArray)
})




